---
id: 6
title: Improved Add
statement: "<p>The Add program you saw earlier could be improved: the numbers in the original registers were lost and only the
  result remained.  Now that you know how to zero and copy registers, write an improved program that adds Register 1 to Register 2,
  storing the result in Register 3.  Register 1 and Register 2 should have their original values once the program finishes.
  </p>"
program: []
tests:
- id: 1
  description: 5+7=12
  status: null
  initRegVals:
  - id: 1
    value: 5
  - id: 2
    value: 7
  - id: 3
    value: 0
  - id: 4
    value: 0
  expectedRegVals:
  - id: 1
    value: 5
  - id: 2
    value: 7
  - id: 3
    value: 12
  actualRegVals:
  - id: 1
    value: null
  - id: 2
    value: null
  - id: 3
    value: null
- id: 2
  description: 10+3=13
  status: null
  initRegVals:
  - id: 1
    value: 10
  - id: 2
    value: 3
  - id: 3
    value: 5
  - id: 4
    value: 2
  expectedRegVals:
  - id: 1
    value: 10
  - id: 2
    value: 3
  - id: 3
    value: 13
  actualRegVals:
    - id: 1
      value: null
    - id: 2
      value: null
    - id: 3
      value: null
registers:
- id: 1
  value: 5
- id: 2
  value: 7
- id: 3
  value: 1
- id: 4
  value: 2
hint: "<p>This is a tricky one.  You could solve this by using an extra register to temporarily store the value of the
  register you are adding to register 3.  Once you are finished with the addition, you can move it back to the original
  register.</p><p>If you need more hints, let's break the problem down further:
  <ol>
      <li>Clean out (zero) the result register and the temporary register</li>
      <li>Add register 1 to the result register and the temporary register</li>
      <li>Move the value of the temporary register back to register 1</li>
      <li>Repeat Step 2 and Step 3 for register 2<li>
  </ol></p>"
