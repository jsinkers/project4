services:
  app:
    #name: app
    build: .
    ports:
      - 8000:8000
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      init:
        condition: service_completed_successfully

  db:
    #name: db
    image: postgres:15
    ports: 
      - 5432:5432
    environment:
      POSTGRES_DB: registerMachine
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d registerMachine -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  init:
    #name: init
    build: .
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        python backend/manage.py migrate &&
        python backend/manage.py runscript import_challenges
      "
    # Ensure init runs as a one-off task
    restart: "no"


volumes:
  postgres_data:
